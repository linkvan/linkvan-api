env:
  RUBY_VERSION: 2.7
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres

name: CI RSpec tests
on: [push, pull_request]
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        # options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: linkvan_api
          POSTGRES_DB: linkvan_api_test
          POSTGRES_PASSWORD: ""  # ${{ env.POSTGRES_PASSWORD }}
        ports: ["5432:5432"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          # ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 15.14.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: linkvan_api
          run: |
            bin/rails db:setup

      - name: Run tests
        run: bin/rspec

      # - name: Install postgres client
        # run: sudo apt-get install libpq-dev
      # - name: Install dependencies
        # run: |
          # gem install bundler
          # bundler install
      # - name: Create database
        # run: |
          # bundler exec rails db:create RAILS_ENV=test
          # bundler exec rails db:migrate RAILS_ENV=test
      # - name: Run tests
        # run: bundler exec rake
      # - name: Upload coverage results    
        # uses: actions/upload-artifact@master
        # if: always()
        # with:
          # name: coverage-report
          # path: coverage

